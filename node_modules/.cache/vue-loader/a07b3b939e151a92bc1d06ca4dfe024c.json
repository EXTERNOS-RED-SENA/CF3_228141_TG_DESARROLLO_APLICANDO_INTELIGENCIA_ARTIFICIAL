{"remainingRequest":"/home/runner/work/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Introduccion.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/runner/work/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Introduccion.vue","mtime":1734973520978},{"path":"/home/runner/work/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF3_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSW50cm9kdWNjaW9uJywKICBkYXRhOiAoKSA9PiAoewogICAgLy8gdmFyaWFibGVzIGRlIHZ1ZQogIH0pLAp9Cg=="},{"version":3,"sources":["Introduccion.vue"],"names":[],"mappings":";AAmDA;AACA;AACA;AACA;AACA;AACA","file":"Introduccion.vue","sourceRoot":"src/pages","sourcesContent":["<template lang=\"pug\">\n.curso-main-container.introduccion\n  BannerInterno\n  .container.tarjeta.tarjeta--blanca.p-4.p-md-5.mb-5\n  \n    .titulo-principal.color-acento-contenido\n      .titulo-principal__numero\n        span\n          i.fas.fa-info\n      h1 Introducción\n    .row.justify-content-center.mb-5\n      .col-lg-9.mb-lg-0.mb-3\n        .row.justify-content-center.align-items-center.mb-3\n          .col-lg-5.col-7.mb-lg-0.mb-3: img(src='@/assets/curso/temas/1.png', alt='')\n          .col-lg-7\n            .p-4(style=\"background-color: #E6F0FC \")\n              p.mb-0 El desarrollo de #[em software] y la creación de interfaces interactivas han adquirido gran importancia en los últimos años. A medida que las aplicaciones y plataformas se vuelven más complejas, los diseñadores y desarrolladores han tenido que evolucionar sus metodologías y herramientas para satisfacer las crecientes expectativas de los usuarios en términos de eficiencia, usabilidad y experiencia. En este marco, se ha establecido un componente integral que abarca desde la formulación y estructuración lógica de algoritmos hasta el diseño visual y funcional de interfaces que optimizan la interacción entre el usuario y la tecnología.\n        p.mb-0 Uno de los aspectos prioritarios en este proceso es la solución efectiva de problemas a través de algoritmos bien diseñados. Esto abarca el pensamiento algorítmico y la habilidad de descomponer problemas complejos en pasos secuenciales, aplicando estructuras básicas de control y validando el funcionamiento mediante metodologías probadas. Estos elementos garantizan que las soluciones no solo sean correctas, sino también optimizadas y robustas, preparadas para manejar diversos escenarios y entradas.\n      .col-lg-3.col-7: img(src='@/assets/curso/temas/2.png', alt='')\n    .row.justify-content-center.mb-5\n      .col-lg-5.col-7.mb-lg-0.mb-3: img(src='@/assets/curso/temas/3.png', alt='')\n      .col-lg-7\n        .tarjeta.border-2.p-2.color-primario--borde.bg-white.mb-3\n          p.mb-0 El siguiente aspecto a tener en cuenta, es el proceso de formulación y representación de algoritmos. Aquí se utilizan herramientas como el pseudocódigo y los diagramas de flujo para conceptualizar las soluciones antes de escribir el código. Esta sección se enfoca en la organización y claridad del diseño lógico, asegurando que los algoritmos sean fácilmente comprensibles y modificables, algo esencial en el desarrollo ágil y colaborativo.\n        p.mb-0 La tercera sección se adentra en el diseño y validación de algoritmos, donde se exploran métodos para evaluar la eficiencia y la precisión de las soluciones. La validación se realiza mediante pruebas de escritorio y simulaciones, lo que permite identificar y corregir errores antes de la implementación. Este enfoque ayuda a minimizar los fallos en la producción y también refuerza la confianza en la fiabilidad del #[em software] desarrollado.\n    .row.justify-content-center.mb-5\n      .col-lg-10.mb-lg-0.mb-3\n        .tarjeta.p-4(style=\"background-color: #EDE9EC\")\n          .row.justify-content-center.align-items-center\n            .col-lg-2.col-4.mb-lg-0.mb-3: img(src='@/assets/curso/temas/4.svg', alt='')\n            .col-lg-10\n              p.mb-0 Finalmente, el componente aborda el prototipado de interfaces de usuario, un área que combina diseño gráfico, experiencia de usuario (UX) y pruebas de usabilidad. Aquí, se detallan los principios y herramientas necesarias para crear prototipos interactivos que respondan a las necesidades de los usuarios, priorizando la accesibilidad y la estética sin comprometer el rendimiento técnico. La integración de estos elementos permite que las aplicaciones sean tanto funcionales como atractivas, ofreciendo una experiencia satisfactoria y fluida.\n      .col-lg-2.col-5: img(src='@/assets/curso/temas/5.svg', alt='')\n    p.mb-5(data-aos='fade-right') ¡Bienvenido a este recorrido por el mundo de los algoritmos y el diseño de interfaces, donde aprenderás a crear experiencias intuitivas y optimizadas para el usuario!\n    figure\n      .video\n        iframe(width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/os2D4s1vbj0?si=ydmTgX3cvKYjc0CD\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen)\n      figcaption Video. Desarrollo de algoritmos y prototipado de interfaces.\n\n\n\n\n\n\n\n\n\n\n</template>\n\n<script>\nexport default {\n  name: 'Introduccion',\n  data: () => ({\n    // variables de vue\n  }),\n}\n</script>\n\n<style lang=\"sass\"></style>\n"]}]}